#! /usr/bin/perl -w 
# This script execute the shell scripts generated by "analysis_script_generator.sh" by multithread. This script was written by my colleague Du Xiaohong.
use strict;
use threads;
use File::Basename;
use Cwd 'abs_path';
use Getopt::Std; 
use vars qw($opt_d $opt_p $opt_n); 
getopts('d:p:n:');
use Data::Dumper;

unless ($opt_d){
    print 
qq(usage::perl $0 automatic run the shell
\t-d <string> direction  default current direction ./
\t-p <string> prefix you can set "sh" or ".sh" or others,forced 
\t-n <number> simultaneously runs shell default 6 
);
    exit();
}   
$opt_p||='sh';
$opt_n||=6;

my @shell;
if (-f $opt_d) {
    open IN,$opt_d ||die $!; 
    while (<IN>) {
        chomp;
        next if /^\s+$/;
        next if /^#/;
        my @aa =split;
        next unless $aa[0];
        push @shell,$aa[0];
    }
}else {
    $opt_d = abs_path $opt_d;
    @shell = glob "$opt_d/*$opt_p";
}
my @number;

foreach my $i (0 .. @shell -1) {
    my $plus =int( $i / $opt_n);
    push @{$number[$plus]},$shell[$i] ;
}
=head 
if ($number <=$opt_n){
    push @number,[1..$number];
    
}
else {
    my $i =int ($number/$opt_n);
    foreach my $j (0 .. $i-1){
        my $m = $j * $opt_n;

        push @number,[$m..$m+$opt_n-1];
    }   
#   push @number,[$_ x 6..$_ x 6+5] foreach 1..$i;
    my $plus = $number%$opt_n;
    if ($plus){
        my $j = $i * $opt_n;
        push @number,[$j..$number-1];
    }   
}
=cut
#print Dumper (\@number);

foreach my $n (@number){
    my @group = @{$n};
#   print "@group\n";
    my @threads;
    my $i =0;
    foreach my $shell(@group){
        $threads[$i]=threads->create(\&RUN,$shell,$opt_d);
        $i++;
    }
    foreach my $thread (@threads){
        $thread->join();
    }
}

sub RUN{
    my $file =shift;
    my $dir =shift;
    if (-f $dir) {
        $dir = dirname $file;
    }
    my $name = basename ($file,".$opt_p");
    system ("nohup sh $file  1>$dir/$name.info 2>$dir/$name.log");
#   print "$dir/$name\n";
}
